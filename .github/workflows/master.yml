name: MasterDeployCI
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    
    - name: Load .env file
      uses: xom9ikk/dotenv@v1.0.2

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.6
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: 'Verify tag'
      run: |
        echo "TAG=${{ steps.tag_version.outputs.new_tag }}" >> $GITHUB_ENV
        echo "New tag: ${{ env.TAG }}"

    - name: Create PWA Release Folder
      if: env.HAS_PWA_EXTENSION == 1
      run: |
        mkdir -p release/scandipwa
        rsync -arv --exclude='.git/' --exclude='.github/' --exclude='.gitignore' pwa/packages/${{ env.PWA_EXTENSION_FOLDER_NAME }} ./release/scandipwa

    - name: Create M2 Release Folder
      if: env.HAS_M2_EXTENSION == 1
      run: |
        mkdir -p release/magento2/app/code/Scandiweb
        rsync -arv --exclude='.git/' --exclude='.github/' --exclude='.gitignore' app/code/Scandiweb/${{ env.M2_EXTENSION_FOLDER_NAME }} ./release/magento2/app/code/Scandiweb

    - name: Create M2 GraphQl Release Folder
      if: env.HAS_GRAPHQL_EXTENSION == 1
      run: |
        mkdir -p release/magento2/app/code/Scandiweb
        rsync -arv --exclude='.git/' --exclude='.github/' --exclude='.gitignore' app/code/Scandiweb/${{ env.GRAPHQL_EXTENSION_FOLDER_NAME }} ./release/magento2/app/code/Scandiweb


    - name: Get variables
      run: |
        echo "SPWAPATH=release/scandipwa/${{ env.PWA_EXTENSION_FOLDER_NAME }}" >> $GITHUB_ENV
        echo "M2PATH=release/magento2/app/code/Scandiweb/${{ env.M2_EXTENSION_FOLDER_NAME }}" >> $GITHUB_ENV
        echo "M2GRAPHQLPATH=release/magento2/app/code/Scandiweb/${{ env.GRAPHQL_EXTENSION_FOLDER_NAME }}" >> $GITHUB_ENV

    - name: Zip PWA artifacts
      if: env.HAS_PWA_EXTENSION == 1
      run: |
        zip -r release/${{ env.PWA_EXTENSION_FOLDER_NAME }}-${{ env.TAG }}-fe.zip ${{ env.SPWAPATH }}

    - name: Zip M2 artifacts
      if: env.HAS_M2_EXTENSION == 1
      run: |
        zip -r release/${{ env.M2_EXTENSION_FOLDER_NAME }}-${{ env.TAG }}-be.zip ${{ env.M2PATH }}

    - name: Zip GraphQl artifacts
      if: env.HAS_GRAPHQL_EXTENSION == 1
      run: zip -r release/${{ env.GRAPHQL_EXTENSION_FOLDER_NAME }}-${{ env.TAG }}-be.zip ${{ env.M2GRAPHQLPATH }}

    - name: List Release Folder
      run: ls -lhat release

    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      if: env.HAS_GRAPHQL_EXTENSION == 0
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
        artifacts: "release/${{ env.PWA_EXTENSION_FOLDER_NAME }}-${{ env.TAG }}-fe.zip,release/${{ env.M2_EXTENSION_FOLDER_NAME }}-${{ env.TAG }}-be.zip"

    - name: Create a GitHub release with GraphQl package
      uses: ncipollo/release-action@v1
      if: env.HAS_GRAPHQL_EXTENSION == 1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
        artifacts: "release/${{ env.PWA_EXTENSION_FOLDER_NAME }}-${{ env.TAG }}-fe.zip,release/${{ env.M2_EXTENSION_FOLDER_NAME }}-${{ env.TAG }}-be.zip,release/${{ env.GRAPHQL_EXTENSION_FOLDER_NAME }}-${{ env.TAG }}-be.zip"
